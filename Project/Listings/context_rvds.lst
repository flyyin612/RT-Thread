


ARM Macro Assembler    Page 1 


    1 00000000         ;*******************************************************
                       ******************************
    2 00000000         ;       »´æ÷±‰¡ø
    3 00000000         ;*******************************************************
                       ******************************
    4 00000000                 IMPORT           rt_thread_switch_interrupt_flag
    5 00000000                 IMPORT           rt_interrupt_from_thread
    6 00000000                 IMPORT           rt_interrupt_to_thread
    7 00000000         
    8 00000000         ;*******************************************************
                       ******************************
    9 00000000         ;       ≥£¡ø
   10 00000000         ;*******************************************************
                       ******************************
   11 00000000         ;-------------------------------------------------------
                       ------------------------------
   12 00000000         ;”–πÿƒ⁄∫ÀÕ‚…Ëºƒ¥Ê∆˜∂®“Âø…≤ŒøºπŸ∑ΩŒƒµµ:STM32F10XXX Cortex
                       -M3 programming manual
   13 00000000         ;œµÕ≥øÿ÷∆øÈÕ‚…ËSCBµÿ÷∑∑∂Œß:0xE000ED00-0xE000ED3F
   14 00000000         ;-------------------------------------------------------
                       -------------------------------
   15 00000000 E000ED08 
                       SCB_VTOR
                               EQU              0xE000ED08  ;œÚ¡ø±Ì∆´“∆ºƒ¥Ê∆˜
   16 00000000 E000ED04 
                       NVIC_INT_CTRL
                               EQU              0xE000ED04  ;÷–∂œøÿ÷∆◊¥Ã¨ºƒ¥Ê∆˜
                                                            
   17 00000000 E000ED20 
                       NVIC_SYSPRI2
                               EQU              0xE000ED20  ;œµÕ≥”≈œ»º∂ºƒ¥Ê∆˜(2
                                                            )
   18 00000000 00FF0000 
                       NVIC_PENDSV_PRI
                               EQU              0x00FF0000  ;PendSV”≈œ»º∂÷µ(low
                                                            est)
   19 00000000 10000000 
                       NVIC_PENDSVSET
                               EQU              0x10000000  ;¥•∑¢PendSV excepti
                                                            onµƒ÷µ
   20 00000000         
   21 00000000         ;*******************************************************
                       *******************************
   22 00000000         ;         ¥˙¬Î≤˙…˙÷∏¡Ó
   23 00000000         ;*******************************************************
                       *******************************
   24 00000000         
   25 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   26 00000000                 THUMB
   27 00000000                 REQUIRE8
   28 00000000                 PRESERVE8
   29 00000000         
   30 00000000         ;/*
   31 00000000         ; *rt_base_t rt_hw_interrupt_disable();
   32 00000000         ; */
   33 00000000         rt_hw_interrupt_disable
                               PROC
   34 00000000                 EXPORT           rt_hw_interrupt_disable



ARM Macro Assembler    Page 2 


   35 00000000 F3EF 8010       MRS              r0, PRIMASK
   36 00000004 B672            CPSID            I
   37 00000006 4770            BX               LR
   38 00000008                 ENDP
   39 00000008         
   40 00000008         ;/*
   41 00000008         ; *void rt_hw_interrupt_enable(rt_base_t level);
   42 00000008         ; */
   43 00000008         rt_hw_interrupt_enable
                               PROC
   44 00000008                 EXPORT           rt_hw_interrupt_enable
   45 00000008 F380 8810       MSR              PRIMASK, r0
   46 0000000C 4770            BX               LR
   47 0000000E                 ENDP
   48 0000000E         
   49 0000000E         ;/*
   50 0000000E         ; *-----------------------------------------------------
                       -------------------------------
   51 0000000E         ; *∫Ø ˝‘≠–Õ:void rt_hw_context_switch_to(rt_uint32 to);
   52 0000000E         ; *r0 --> to
   53 0000000E         ; *∏√∫Ø ˝”√”⁄ø™∆Ùµ⁄“ª¥Œœﬂ≥Ã«–ªª
   54 0000000E         ; *-----------------------------------------------------
                       -------------------------------
   55 0000000E         ; */
   56 0000000E         
   57 0000000E         rt_hw_context_switch_to
                               PROC
   58 0000000E         
   59 0000000E         ;µº≥ˆrt_hw_context_switch_to,»√∆‰æﬂ”–»´æ÷ Ù–‘£¨ø…“‘‘⁄CŒƒ
                       º˛µ˜”√
   60 0000000E                 EXPORT           rt_hw_context_switch_to
   61 0000000E         
   62 0000000E         ;…Ë÷√rt_interrupt_to_threadµƒ÷µ
   63 0000000E 4924            LDR              r1, =rt_interrupt_to_thread ;Ω´
                                                            rt_interrupt_to_thr
                                                            eadµƒµÿ÷∑º”‘ÿµΩr1
   64 00000010 6008            STR              r0, [r1]    ;Ω´r0µƒ÷µ¥Ê¥¢µΩrt_i
                                                            nterrupt_to_thread
   65 00000012         
   66 00000012         ;…Ë÷√rt_interrupt_from_threadµƒ÷µŒ™0£¨±Ì æ∆Ù∂Øµ⁄“ª¥Œœﬂ≥Ã
                       «–ªª
   67 00000012 4924            LDR              r1, =rt_interrupt_from_thread ;
                                                            Ω´rt_interrupt_from
                                                            _threadµƒµÿ÷∑º”‘ÿµΩ
                                                            r1
   68 00000014 F04F 0000       MOV              r0, #0x0    ;≈‰÷√r0µ»”⁄0
   69 00000018 6008            STR              r0, [r1]    ;Ω´r0µƒ÷µ¥Ê¥¢µΩrt_t
                                                            hread_switch_interr
                                                            upt_flag
   70 0000001A         
   71 0000001A         ;…Ë÷√÷–∂œ±Í÷æŒªrt_thread_switch_interrupt_flagµƒ÷µŒ™1
   72 0000001A 4923            LDR              r1, =rt_thread_switch_interrupt
_flag 
                                                            ;Ω´rt_thread_switch
                                                            _interrupt_flagµƒµÿ
                                                            ÷∑º”‘ÿµΩr1
   73 0000001C F04F 0001       MOV              r0, #1      ;≈‰÷√r0µ»”⁄1
   74 00000020 6008            STR              r0, [r1]    ;Ω´r0µƒ÷µ¥Ê¥¢µΩrt_t
                                                            hread_switch_interr



ARM Macro Assembler    Page 3 


                                                            upt_flag
   75 00000022         
   76 00000022         ;…Ë÷√PendSV“Ï≥£µƒ”≈œ»º∂
   77 00000022 4822            LDR              r0, =NVIC_SYSPRI2
   78 00000024 F44F 017F       LDR              r1, =NVIC_PENDSV_PRI
   79 00000028 F8D0 2000       LDR.W            r2, [r0,#0x00] ;∂¡
   80 0000002C EA41 0102       ORR              r1,r1,r2    ;∏ƒ
   81 00000030 6001            STR              r1, [r0]    ;–¥
   82 00000032         
   83 00000032         ;¥•∑¢PendSV“Ï≥£(≤˙…˙…œœ¬Œƒ«–ªª)
   84 00000032 481F            LDR              r0, =NVIC_INT_CTRL
   85 00000034 F04F 5180       LDR              r1, =NVIC_PENDSVSET
   86 00000038 6001            STR              r1, [r0]
   87 0000003A         
   88 0000003A         ;ø™÷–∂œ
   89 0000003A B661            CPSIE            F
   90 0000003C B662            CPSIE            I
   91 0000003E         
   92 0000003E         ;”¿‘∂≤ªª·µΩ¥Ô’‚¿Ô
   93 0000003E                 ENDP
   94 0000003E         
   95 0000003E         ;/*
   96 0000003E         ; *-----------------------------------------------------
                       -------------------------------------------------
   97 0000003E         ; *void rt_hw_context_switch(rt_uint32 from, rt_uint32 t
                       o);
   98 0000003E         ; *r0 --> from
   99 0000003E         ; *r1 --> to
  100 0000003E         ; *-----------------------------------------------------
                       --------------------------------------------------
  101 0000003E         ; */
  102 0000003E         ;rt_hw_context_switch_interrupt
  103 0000003E         ;EXPORT rt_hw_context_switch_interrupt
  104 0000003E         
  105 0000003E         rt_hw_context_switch
                               PROC
  106 0000003E                 EXPORT           rt_hw_context_switch
  107 0000003E         
  108 0000003E         ;…Ë÷√÷–∂œ±Í÷æŒªrt_thread_switch_interrupt_flagŒ™1
  109 0000003E 4A1A            LDR              r2, =rt_thread_switch_interrupt
_flag 
                                                            ;º”‘ÿrt_thread_swit
                                                            ch_interrupt_flagµƒ
                                                            µÿ÷∑µΩr2
  110 00000040 6813            LDR              r3, [r2]    ;º”‘ÿrt_thread_swit
                                                            ch_interrupt_flagµƒ
                                                            ÷µµΩr3
  111 00000042 2B01            CMP              r3, #1      ;r3”Î1±»Ωœ£¨œ‡µ»‘Ú÷
                                                            ¥––BEQ÷∏¡Ó£¨∑Ò‘Ú≤ª÷
                                                            ¥––
  112 00000044 D006            BEQ              _reswitch
  113 00000046 F04F 0301       MOV              r3, #1      ;…Ë÷√r3µƒ÷µŒ™1
  114 0000004A 6013            STR              r3, [r2]    ;Ω´r3µƒ÷µ¥Ê¥¢µΩrt_t
                                                            hread_switch_interr
                                                            upt_flag,º¥÷√1
  115 0000004C         
  116 0000004C         ;…Ë÷√rt_interrupt_from_threadµƒ÷µ
  117 0000004C 4A15            LDR              r2, =rt_interrupt_from_thread ;
                                                            º”‘ÿrt_interrupt_fr



ARM Macro Assembler    Page 4 


                                                            om_threadµƒµÿ÷∑µΩr2
                                                            
  118 0000004E 6010            STR              r0, [r2]    ;¥Ê¥¢r0µƒ÷µµΩrt_int
                                                            errupt_from_thread£
                                                            ¨º¥…œ“ª∏ˆœﬂ≥Ã’ª÷∏’Î
                                                            spµƒ÷∏’Î
  119 00000050         
  120 00000050         ;…Ë÷√rt_interrupt_from_threadµƒ÷µ
  121 00000050 4A14            LDR              r2, =rt_interrupt_from_thread ;
                                                            º”‘ÿrt_interrupt_fr
                                                            om_threadµƒµÿ÷∑µΩr2
                                                            
  122 00000052 6010            STR              r0, [r2]    ;¥Ê¥¢r0µƒ÷µµΩrt_int
                                                            errupt_from_thread£
                                                            ¨º¥…œ“ª∏ˆœﬂ≥Ã’ª÷∏’Î
                                                            spµƒ÷∏’Î
  123 00000054         
  124 00000054         _reswitch
  125 00000054         ;…Ë÷√rt_interrupt_to_threadµƒ÷µ
  126 00000054 4A12            LDR              r2, =rt_interrupt_to_thread ;º”
                                                            ‘ÿrt_interrupt_from
                                                            _threadµƒµÿ÷∑µΩr2
  127 00000056 6011            STR              r1, [r2]    ;¥Ê¥¢r1µƒ÷µµΩrt_int
                                                            errupt_from_thread£
                                                            ¨º¥œ¬“ª∏ˆœﬂ≥Ã’ª÷∏’Î
                                                            spµƒ÷∏’Î
  128 00000058         
  129 00000058         ;¥•∑¢PendSV“Ï≥££¨ µœ÷…œœ¬Œƒ«–ªª
  130 00000058 4815            LDR              r0, =NVIC_INT_CTRL
  131 0000005A F04F 5180       LDR              r1, =NVIC_PENDSVSET
  132 0000005E 6001            STR              r1, [r0]
  133 00000060         
  134 00000060         ;◊”≥Ã–Ú∑µªÿ
  135 00000060 4770            BX               LR
  136 00000062         
  137 00000062         ;◊”≥Ã–ÚΩ· ¯
  138 00000062                 ENDP
  139 00000062         
  140 00000062         ;/*
  141 00000062         ; *-----------------------------------------------------
                       --------------------------------------------------------
                       --------------
  142 00000062         ; *void PendSV_Handler(void)
  143 00000062         ; *r0 --> switch from thread stack
  144 00000062         ; *r1 --> swicth to thread stack
  145 00000062         ; *psr,pc,lr,r12,r3,r2,r1,r0 are pushed into [from] stac
                       k
  146 00000062         ; *-----------------------------------------------------
                       --------------------------------------------------------
                       --------------
  147 00000062         ; */
  148 00000062         PendSV_Handler
                               PROC
  149 00000062                 EXPORT           PendSV_Handler
  150 00000062         
  151 00000062         ; ßƒ‹÷–∂œ£¨Œ™¡À±£ª§…œœ¬Œƒ«–ªª≤ª±ª÷–∂œ
  152 00000062 F3EF 8210       MRS              r2, PRIMASK
  153 00000066 B672            CPSID            I
  154 00000068         



ARM Macro Assembler    Page 5 


  155 00000068         ;ªÒ»°÷–∂œ±Í÷æŒª£¨ø¥ø¥ «∑ÒŒ™0
  156 00000068 480F            LDR              r0, =rt_thread_switch_interrupt
_flag 
                                                            ;º”‘ÿrt_thread_swit
                                                            ch_interrupt_flagµƒ
                                                            µÿ÷∑µΩr0
  157 0000006A 6801            LDR              r1, [r0]    ;º”‘ÿrt_thread_swit
                                                            ch_interrupt_flagµƒ
                                                            ÷µµΩr1
  158 0000006C B191            CBZ              r1, pendsv_exit ;≈–∂œr1 «∑ÒŒ™0£
                                                            ¨Œ™0‘ÚÃ¯◊™µΩpendsv_
                                                            exit
  159 0000006E         
  160 0000006E         ;r1≤ªŒ™0‘Ú«Â0
  161 0000006E F04F 0100       MOV              r1, #0x00
  162 00000072 6001            STR              r1, [r0]    ;Ω´r1µƒ÷µ¥Ê¥¢µΩrt_t
                                                            hread_switch_interr
                                                            upt_flag,º¥«Â0
  163 00000074         
  164 00000074         ;≈–∂œrt_interrupt_from_threadµƒ÷µ «∑ÒŒ™0
  165 00000074 480B            LDR              r0, =rt_interrupt_from_thread ;
                                                            º”‘ÿrt_interrupt_fr
                                                            om_threadµƒµÿ÷∑µΩr0
                                                            
  166 00000076 6801            LDR              r1, [r0]    ;º”‘ÿrt_interrupt_f
                                                            rom_threadµƒ÷µµΩr1
  167 00000078 B129            CBZ              r1, switch_to_thread ;≈–∂œr1 «∑
                                                            ÒŒ™0£¨Œ™0‘ÚÃ¯◊™µΩsw
                                                            itch_to_thread
  168 0000007A         ;µ⁄“ª¥Œœﬂ≥Ã«–ªª ±rt_interrupt_from_threadøœ∂®Œ™0£¨‘ÚÃ¯◊™
                       µΩswitch_to_thread
  169 0000007A         
  170 0000007A         ; =================================…œŒƒ±£¥Ê=============
                       ========================================================
                       ====================
  171 0000007A         ;µ±Ω¯»ÎPendSVC Handler ±£¨…œ“ª∏ˆœﬂ≥Ã‘À––µƒª∑æ≥º¥:
  172 0000007A         ;xPSR,PC(œﬂ≥Ã»Îø⁄µÿ÷∑)£¨R14,R12,R3,R2,R1,R0(œﬂ≥Ãµƒ–Œ≤Œ)
  173 0000007A         ;’‚–©CPUºƒ¥Ê∆˜µƒ÷µª·◊‘∂Ø±£¥ÊµΩœﬂ≥Ãµƒ’ª÷–£¨ £œ¬µƒr4~r11–Ë
                       “™ ÷∂Ø±£¥Ê
  174 0000007A         
  175 0000007A F3EF 8109       MRS              r1,psp      ;ªÒ»°œﬂ≥Ã’ª÷∏’ÎµΩr1
                                                            
  176 0000007E E921 0FF0       STMFD            r1!,{r4 - r11} ;Ω´CPUºƒ¥Ê∆˜r4~r
                                                            11µƒ÷µ¥Ê¥¢µΩr1÷∏œÚµ
                                                            ƒµÿ÷∑(√ø≤Ÿ◊˜“ª¥Œµÿ÷
                                                            ∑Ω´µ›ºı“ª¥Œ)
  177 00000082 6800            LDR              r0, [r0]    ;º”‘ÿr0÷∏œÚ÷µµΩr0£¨
                                                            º¥r0=rt_interrupt_f
                                                            rom_thread
  178 00000084 6001            STR              r1, [r0]    ;Ω´r1µƒ÷µ¥Ê¥¢µΩr0,º
                                                            ¥∏¸–¬œﬂ≥Ã’ªsp
  179 00000086         
  180 00000086         ; ==================================œ¬Œƒ«–ªª============
                       ========================================================
                       ====================
  181 00000086         switch_to_thread
  182 00000086 4906            LDR              r1, =rt_interrupt_to_thread ;º”
                                                            ‘ÿrt_interrupt_to_t
                                                            hreadµƒµÿ÷∑µΩr1



ARM Macro Assembler    Page 6 


  183 00000088         ;rt_interrupt_to_thread «“ª∏ˆ»´æ÷±‰¡ø£¨¿Ô√Ê¥Êµƒ «œﬂ≥Ã’ª÷
                       ∏’ÎSPµƒ÷∏’Î
  184 00000088 6809            LDR              r1, [r1]    ;º”‘ÿrt_interrupt_t
                                                            o_threadµƒ÷µµΩr1,º¥
                                                            sp÷∏’Îµƒ÷∏’Î
  185 0000008A 6809            LDR              r1, [r1]    ;º”‘ÿrt_interrupt_t
                                                            o_threadµƒ÷µµΩr1,º¥
                                                            sp
  186 0000008C         
  187 0000008C E8B1 0FF0       LDMFD            r1!, {r4 - r11} ;Ω´œﬂ≥Ã’ª÷∏’Îr1
                                                            (≤Ÿ◊˜÷Æ«∞œ»µ›ºı)÷∏œ
                                                            Úµƒƒ⁄»›º”‘ÿµΩCPUºƒ¥
                                                            Ê∆˜r4~r11
  188 00000090 F381 8809       MSR              psp, r1     ;Ω´œﬂ≥Ã’ª÷∏’Î∏¸–¬µΩ
                                                            PSP
  189 00000094         
  190 00000094         pendsv_exit
  191 00000094         ;ª÷∏¥÷–∂œ
  192 00000094 F382 8810       MSR              PRIMASK, r2
  193 00000098         
  194 00000098 F04E 0E04       ORR              lr, lr, #0x04 ;»∑±£“Ï≥£∑µªÿ π”√
                                                            µƒ∂—’ª÷∏’Î «PSP£¨º¥
                                                            LRºƒ¥Ê∆˜µƒŒª2“™Œ™1
  195 0000009C 4770            BX               lr          ;“Ï≥£∑µªÿ£¨’‚∏ˆ ±∫Ú
                                                            »ŒŒÒ∂—’ª÷–µƒ £œ¬µƒƒ
                                                            ⁄»›Ω´ª·◊‘∂Øº”‘ÿµΩxP
                                                            SR,PC(»ŒŒÒ»Îø⁄µÿ÷∑)
                                                            ,R14,R12,R3,R2,R1,R
                                                            0(»ŒŒÒµƒ–Œ≤Œ)
  196 0000009E         
  197 0000009E         ; PendSV_Handler ◊”≥Ã–ÚΩ· ¯
  198 0000009E                 ENDP
  199 0000009E         
  200 0000009E 00 00           ALIGN            4
  201 000000A0         
  202 000000A0                 END
              00000000 
              00000000 
              00000000 
              E000ED20 
              E000ED04 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\objects\context_rvds.d -o.\objects\context_rvds.o -I.\RTE\_Targe
t_1 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.4.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\P
ACK\ARM\CMSIS\5.4.0\Device\ARM\ARMCM3\Include --predefine="__UVISION_VERSION SE
TA 526" --predefine="_RTE_ SETA 1" --predefine="ARMCM3 SETA 1" --list=.\listing
s\context_rvds.lst ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 25 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
   Uses
      None
Comment: .text unused
PendSV_Handler 00000062

Symbol: PendSV_Handler
   Definitions
      At line 148 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
   Uses
      At line 149 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
Comment: PendSV_Handler used once
_reswitch 00000054

Symbol: _reswitch
   Definitions
      At line 124 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
   Uses
      At line 112 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
Comment: _reswitch used once
pendsv_exit 00000094

Symbol: pendsv_exit
   Definitions
      At line 190 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
   Uses
      At line 158 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
Comment: pendsv_exit used once
rt_hw_context_switch 0000003E

Symbol: rt_hw_context_switch
   Definitions
      At line 105 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
   Uses
      At line 106 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
Comment: rt_hw_context_switch used once
rt_hw_context_switch_to 0000000E

Symbol: rt_hw_context_switch_to
   Definitions
      At line 57 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
   Uses
      At line 60 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
Comment: rt_hw_context_switch_to used once
rt_hw_interrupt_disable 00000000

Symbol: rt_hw_interrupt_disable
   Definitions
      At line 33 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
   Uses
      At line 34 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
Comment: rt_hw_interrupt_disable used once
rt_hw_interrupt_enable 00000008

Symbol: rt_hw_interrupt_enable



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 43 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
   Uses
      At line 44 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
Comment: rt_hw_interrupt_enable used once
switch_to_thread 00000086

Symbol: switch_to_thread
   Definitions
      At line 181 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
   Uses
      At line 167 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
Comment: switch_to_thread used once
9 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

NVIC_INT_CTRL E000ED04

Symbol: NVIC_INT_CTRL
   Definitions
      At line 16 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
   Uses
      At line 84 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
      At line 130 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s

NVIC_PENDSVSET 10000000

Symbol: NVIC_PENDSVSET
   Definitions
      At line 19 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
   Uses
      At line 85 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
      At line 131 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s

NVIC_PENDSV_PRI 00FF0000

Symbol: NVIC_PENDSV_PRI
   Definitions
      At line 18 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
   Uses
      At line 78 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
Comment: NVIC_PENDSV_PRI used once
NVIC_SYSPRI2 E000ED20

Symbol: NVIC_SYSPRI2
   Definitions
      At line 17 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
   Uses
      At line 77 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
Comment: NVIC_SYSPRI2 used once
SCB_VTOR E000ED08

Symbol: SCB_VTOR
   Definitions
      At line 15 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
   Uses
      None
Comment: SCB_VTOR unused
5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

rt_interrupt_from_thread 00000000

Symbol: rt_interrupt_from_thread
   Definitions
      At line 5 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
   Uses
      At line 67 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
      At line 117 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
      At line 121 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
      At line 165 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s

rt_interrupt_to_thread 00000000

Symbol: rt_interrupt_to_thread
   Definitions
      At line 6 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
   Uses
      At line 63 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
      At line 126 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
      At line 182 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s

rt_thread_switch_interrupt_flag 00000000

Symbol: rt_thread_switch_interrupt_flag
   Definitions
      At line 4 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
   Uses
      At line 72 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
      At line 109 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
      At line 156 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s

3 symbols
352 symbols in table
