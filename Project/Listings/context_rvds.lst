


ARM Macro Assembler    Page 1 


    1 00000000         ;*******************************************************
                       ******************************
    2 00000000         ;       »´æ÷±‰¡ø
    3 00000000         ;*******************************************************
                       ******************************
    4 00000000                 IMPORT           rt_thread_switch_interrupt_flag
    5 00000000                 IMPORT           rt_interrupt_from_thread
    6 00000000                 IMPORT           rt_interrupt_to_thread
    7 00000000         
    8 00000000         ;*******************************************************
                       ******************************
    9 00000000         ;       ≥£¡ø
   10 00000000         ;*******************************************************
                       ******************************
   11 00000000         ;-------------------------------------------------------
                       ------------------------------
   12 00000000         ;”–πÿƒ⁄∫ÀÕ‚…Ëºƒ¥Ê∆˜∂®“Âø…≤ŒøºπŸ∑ΩŒƒµµ:STM32F10XXX Cortex
                       -M3 programming manual
   13 00000000         ;œµÕ≥øÿ÷∆øÈÕ‚…ËSCBµÿ÷∑∑∂Œß:0xE000ED00-0xE000ED3F
   14 00000000         ;-------------------------------------------------------
                       -------------------------------
   15 00000000 E000ED08 
                       SCB_VTOR
                               EQU              0xE000ED08  ;œÚ¡ø±Ì∆´“∆ºƒ¥Ê∆˜
   16 00000000 E000ED04 
                       NVIC_INT_CTRL
                               EQU              0xE000ED04  ;÷–∂œøÿ÷∆◊¥Ã¨ºƒ¥Ê∆˜
                                                            
   17 00000000 E000ED20 
                       NVIC_SYSPRI2
                               EQU              0xE000ED20  ;œµÕ≥”≈œ»º∂ºƒ¥Ê∆˜(2
                                                            )
   18 00000000 00FF0000 
                       NVIC_PENDSV_PRI
                               EQU              0x00FF0000  ;PendSV”≈œ»º∂÷µ(low
                                                            est)
   19 00000000 10000000 
                       NVIC_PENDSVSET
                               EQU              0x10000000  ;¥•∑¢PendSV excepti
                                                            onµƒ÷µ
   20 00000000         
   21 00000000         ;*******************************************************
                       *******************************
   22 00000000         ;         ¥˙¬Î≤˙…˙÷∏¡Ó
   23 00000000         ;*******************************************************
                       *******************************
   24 00000000         
   25 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   26 00000000                 THUMB
   27 00000000                 REQUIRE8
   28 00000000                 PRESERVE8
   29 00000000         
   30 00000000         ;/*
   31 00000000         ; *-----------------------------------------------------
                       -------------------------------
   32 00000000         ; *∫Ø ˝‘≠–Õ:void rt_hw_context_switch_to(rt_uint32 to);
   33 00000000         ; *r0 --> to
   34 00000000         ; *∏√∫Ø ˝”√”⁄ø™∆Ùµ⁄“ª¥Œœﬂ≥Ã«–ªª



ARM Macro Assembler    Page 2 


   35 00000000         ; *-----------------------------------------------------
                       -------------------------------
   36 00000000         ; */
   37 00000000         
   38 00000000         rt_hw_context_switch_to
                               PROC
   39 00000000         
   40 00000000         ;µº≥ˆrt_hw_context_switch_to,»√∆‰æﬂ”–»´æ÷ Ù–‘£¨ø…“‘‘⁄CŒƒ
                       º˛µ˜”√
   41 00000000                 EXPORT           rt_hw_context_switch_to
   42 00000000         
   43 00000000         ;…Ë÷√rt_interrupt_to_threadµƒ÷µ
   44 00000000 4921            LDR              r1, =rt_interrupt_to_thread ;Ω´
                                                            rt_interrupt_to_thr
                                                            eadµƒµÿ÷∑º”‘ÿµΩr1
   45 00000002 6008            STR              r0, [r1]    ;Ω´r0µƒ÷µ¥Ê¥¢µΩrt_i
                                                            nterrupt_to_thread
   46 00000004         
   47 00000004         ;…Ë÷√rt_interrupt_from_threadµƒ÷µŒ™0£¨±Ì æ∆Ù∂Øµ⁄“ª¥Œœﬂ≥Ã
                       «–ªª
   48 00000004 4921            LDR              r1, =rt_interrupt_from_thread ;
                                                            Ω´rt_interrupt_from
                                                            _threadµƒµÿ÷∑º”‘ÿµΩ
                                                            r1
   49 00000006 F04F 0000       MOV              r0, #0x0    ;≈‰÷√r0µ»”⁄0
   50 0000000A 6008            STR              r0, [r1]    ;Ω´r0µƒ÷µ¥Ê¥¢µΩrt_t
                                                            hread_switch_interr
                                                            upt_flag
   51 0000000C         
   52 0000000C         ;…Ë÷√PendSV“Ï≥£µƒ”≈œ»º∂
   53 0000000C 4820            LDR              r0, =NVIC_SYSPRI2
   54 0000000E F44F 017F       LDR              r1, =NVIC_PENDSV_PRI
   55 00000012 F8D0 2000       LDR.W            r2, [r0,#0x00] ;∂¡
   56 00000016 EA41 0102       ORR              r1,r1,r2    ;∏ƒ
   57 0000001A 6001            STR              r1, [r0]    ;–¥
   58 0000001C         
   59 0000001C         ;¥•∑¢PendSV“Ï≥£(≤˙…˙…œœ¬Œƒ«–ªª)
   60 0000001C 481D            LDR              r0, =NVIC_INT_CTRL
   61 0000001E F04F 5180       LDR              r1, =NVIC_PENDSVSET
   62 00000022 6001            STR              r1, [r0]
   63 00000024         
   64 00000024         ;ø™÷–∂œ
   65 00000024 B661            CPSIE            F
   66 00000026 B662            CPSIE            I
   67 00000028         
   68 00000028         ;”¿‘∂≤ªª·µΩ¥Ô’‚¿Ô
   69 00000028                 ENDP
   70 00000028         
   71 00000028         ;/*
   72 00000028         ; *-----------------------------------------------------
                       -------------------------------------------------
   73 00000028         ; *void rt_hw_context_switch(rt_uint32 from, rt_uint32 t
                       o);
   74 00000028         ; *r0 --> from
   75 00000028         ; *r1 --> to
   76 00000028         ; *-----------------------------------------------------
                       --------------------------------------------------
   77 00000028         ; */
   78 00000028         ;rt_hw_context_switch_interrupt



ARM Macro Assembler    Page 3 


   79 00000028         ;EXPORT rt_hw_context_switch_interrupt
   80 00000028         
   81 00000028         rt_hw_context_switch
                               PROC
   82 00000028                 EXPORT           rt_hw_context_switch
   83 00000028         
   84 00000028         ;…Ë÷√÷–∂œ±Í÷æŒªrt_thread_switch_interrupt_flagŒ™1
   85 00000028 4A1B            LDR              r2, =rt_thread_switch_interrupt
_flag 
                                                            ;º”‘ÿrt_thread_swit
                                                            ch_interrupt_flagµƒ
                                                            µÿ÷∑µΩr2
   86 0000002A 6813            LDR              r3, [r2]    ;º”‘ÿrt_thread_swit
                                                            ch_interrupt_flagµƒ
                                                            ÷µµΩr3
   87 0000002C 2B01            CMP              r3, #1      ;r3”Î1±»Ωœ£¨œ‡µ»‘Ú÷
                                                            ¥––BEQ÷∏¡Ó£¨∑Ò‘Ú≤ª÷
                                                            ¥––
   88 0000002E D006            BEQ              _reswitch
   89 00000030 F04F 0301       MOV              r3, #1      ;…Ë÷√r3µƒ÷µŒ™1
   90 00000034 6013            STR              r3, [r2]    ;Ω´r3µƒ÷µ¥Ê¥¢µΩrt_t
                                                            hread_switch_interr
                                                            upt_flag,º¥÷√1
   91 00000036         
   92 00000036         ;…Ë÷√rt_interrupt_from_threadµƒ÷µ
   93 00000036 4A15            LDR              r2, =rt_interrupt_from_thread ;
                                                            º”‘ÿrt_interrupt_fr
                                                            om_threadµƒµÿ÷∑µΩr2
                                                            
   94 00000038 6010            STR              r0, [r2]    ;¥Ê¥¢r0µƒ÷µµΩrt_int
                                                            errupt_from_thread£
                                                            ¨º¥…œ“ª∏ˆœﬂ≥Ã’ª÷∏’Î
                                                            spµƒ÷∏’Î
   95 0000003A         
   96 0000003A         ;…Ë÷√rt_interrupt_from_threadµƒ÷µ
   97 0000003A 4A14            LDR              r2, =rt_interrupt_from_thread ;
                                                            º”‘ÿrt_interrupt_fr
                                                            om_threadµƒµÿ÷∑µΩr2
                                                            
   98 0000003C 6010            STR              r0, [r2]    ;¥Ê¥¢r0µƒ÷µµΩrt_int
                                                            errupt_from_thread£
                                                            ¨º¥…œ“ª∏ˆœﬂ≥Ã’ª÷∏’Î
                                                            spµƒ÷∏’Î
   99 0000003E         
  100 0000003E         _reswitch
  101 0000003E         ;…Ë÷√rt_interrupt_to_threadµƒ÷µ
  102 0000003E 4A12            LDR              r2, =rt_interrupt_to_thread ;º”
                                                            ‘ÿrt_interrupt_from
                                                            _threadµƒµÿ÷∑µΩr2
  103 00000040 6011            STR              r1, [r2]    ;¥Ê¥¢r1µƒ÷µµΩrt_int
                                                            errupt_from_thread£
                                                            ¨º¥œ¬“ª∏ˆœﬂ≥Ã’ª÷∏’Î
                                                            spµƒ÷∏’Î
  104 00000042         
  105 00000042         ;¥•∑¢PendSV“Ï≥££¨ µœ÷…œœ¬Œƒ«–ªª
  106 00000042 4814            LDR              r0, =NVIC_INT_CTRL
  107 00000044 F04F 5180       LDR              r1, =NVIC_PENDSVSET
  108 00000048 6001            STR              r1, [r0]
  109 0000004A         



ARM Macro Assembler    Page 4 


  110 0000004A         ;◊”≥Ã–Ú∑µªÿ
  111 0000004A 4770            BX               LR
  112 0000004C         
  113 0000004C         ;◊”≥Ã–ÚΩ· ¯
  114 0000004C                 ENDP
  115 0000004C         
  116 0000004C         ;/*
  117 0000004C         ; *-----------------------------------------------------
                       --------------------------------------------------------
                       --------------
  118 0000004C         ; *void PendSV_Handler(void)
  119 0000004C         ; *r0 --> switch from thread stack
  120 0000004C         ; *r1 --> swicth to thread stack
  121 0000004C         ; *psr,pc,lr,r12,r3,r2,r1,r0 are pushed into [from] stac
                       k
  122 0000004C         ; *-----------------------------------------------------
                       --------------------------------------------------------
                       --------------
  123 0000004C         ; */
  124 0000004C         PendSV_Handler
                               PROC
  125 0000004C                 EXPORT           PendSV_Handler
  126 0000004C         
  127 0000004C         ; ßƒ‹÷–∂œ£¨Œ™¡À±£ª§…œœ¬Œƒ«–ªª≤ª±ª÷–∂œ
  128 0000004C F3EF 8210       MRS              r2, PRIMASK
  129 00000050 B672            CPSID            I
  130 00000052         
  131 00000052         ;ªÒ»°÷–∂œ±Í÷æŒª£¨ø¥ø¥ «∑ÒŒ™0
  132 00000052 4811            LDR              r0, =rt_thread_switch_interrupt
_flag 
                                                            ;º”‘ÿrt_thread_swit
                                                            ch_interrupt_flagµƒ
                                                            µÿ÷∑µΩr0
  133 00000054 6801            LDR              r1, [r0]    ;º”‘ÿrt_thread_swit
                                                            ch_interrupt_flagµƒ
                                                            ÷µµΩr1
  134 00000056 B191            CBZ              r1, pendsv_exit ;≈–∂œr1 «∑ÒŒ™0£
                                                            ¨Œ™0‘ÚÃ¯◊™µΩpendsv_
                                                            exit
  135 00000058         
  136 00000058         ;r1≤ªŒ™0‘Ú«Â0
  137 00000058 F04F 0100       MOV              r1, #0x00
  138 0000005C 6001            STR              r1, [r0]    ;Ω´r1µƒ÷µ¥Ê¥¢µΩrt_t
                                                            hread_switch_interr
                                                            upt_flag,º¥«Â0
  139 0000005E         
  140 0000005E         ;≈–∂œrt_interrupt_from_threadµƒ÷µ «∑ÒŒ™0
  141 0000005E 480B            LDR              r0, =rt_interrupt_from_thread ;
                                                            º”‘ÿrt_interrupt_fr
                                                            om_threadµƒµÿ÷∑µΩr0
                                                            
  142 00000060 6801            LDR              r1, [r0]    ;º”‘ÿrt_interrupt_f
                                                            rom_threadµƒ÷µµΩr1
  143 00000062 B129            CBZ              r1, switch_to_thread ;≈–∂œr1 «∑
                                                            ÒŒ™0£¨Œ™0‘ÚÃ¯◊™µΩsw
                                                            itch_to_thread
  144 00000064         ;µ⁄“ª¥Œœﬂ≥Ã«–ªª ±rt_interrupt_from_threadøœ∂®Œ™0£¨‘ÚÃ¯◊™
                       µΩswitch_to_thread
  145 00000064         



ARM Macro Assembler    Page 5 


  146 00000064         ; =================================…œŒƒ±£¥Ê=============
                       ========================================================
                       ====================
  147 00000064         ;µ±Ω¯»ÎPendSVC Handler ±£¨…œ“ª∏ˆœﬂ≥Ã‘À––µƒª∑æ≥º¥:
  148 00000064         ;xPSR,PC(œﬂ≥Ã»Îø⁄µÿ÷∑)£¨R14,R12,R3,R2,R1,R0(œﬂ≥Ãµƒ–Œ≤Œ)
  149 00000064         ;’‚–©CPUºƒ¥Ê∆˜µƒ÷µª·◊‘∂Ø±£¥ÊµΩœﬂ≥Ãµƒ’ª÷–£¨ £œ¬µƒr4~r11–Ë
                       “™ ÷∂Ø±£¥Ê
  150 00000064         
  151 00000064 F3EF 8109       MRS              r1,psp      ;ªÒ»°œﬂ≥Ã’ª÷∏’ÎµΩr1
                                                            
  152 00000068 E921 0FF0       STMFD            r1!,{r4 - r11} ;Ω´CPUºƒ¥Ê∆˜r4~r
                                                            11µƒ÷µ¥Ê¥¢µΩr1÷∏œÚµ
                                                            ƒµÿ÷∑(√ø≤Ÿ◊˜“ª¥Œµÿ÷
                                                            ∑Ω´µ›ºı“ª¥Œ)
  153 0000006C 6800            LDR              r0, [r0]    ;º”‘ÿr0÷∏œÚ÷µµΩr0£¨
                                                            º¥r0=rt_interrupt_f
                                                            rom_thread
  154 0000006E 6001            STR              r1, [r0]    ;Ω´r1µƒ÷µ¥Ê¥¢µΩr0,º
                                                            ¥∏¸–¬œﬂ≥Ã’ªsp
  155 00000070         
  156 00000070         ; ==================================œ¬Œƒ«–ªª============
                       ========================================================
                       ====================
  157 00000070         switch_to_thread
  158 00000070 4905            LDR              r1, =rt_interrupt_to_thread ;º”
                                                            ‘ÿrt_interrupt_to_t
                                                            hreadµƒµÿ÷∑µΩr1
  159 00000072         ;rt_interrupt_to_thread «“ª∏ˆ»´æ÷±‰¡ø£¨¿Ô√Ê¥Êµƒ «œﬂ≥Ã’ª÷
                       ∏’ÎSPµƒ÷∏’Î
  160 00000072 6809            LDR              r1, [r1]    ;º”‘ÿrt_interrupt_t
                                                            o_threadµƒ÷µµΩr1,º¥
                                                            sp÷∏’Îµƒ÷∏’Î
  161 00000074 6809            LDR              r1, [r1]    ;º”‘ÿrt_interrupt_t
                                                            o_threadµƒ÷µµΩr1,º¥
                                                            sp
  162 00000076         
  163 00000076 E8B1 0FF0       LDMFD            r1!, {r4 - r11} ;Ω´œﬂ≥Ã’ª÷∏’Îr1
                                                            (≤Ÿ◊˜÷Æ«∞œ»µ›ºı)÷∏œ
                                                            Úµƒƒ⁄»›º”‘ÿµΩCPUºƒ¥
                                                            Ê∆˜r4~r11
  164 0000007A F381 8809       MSR              psp, r1     ;Ω´œﬂ≥Ã’ª÷∏’Î∏¸–¬µΩ
                                                            PSP
  165 0000007E         
  166 0000007E         pendsv_exit
  167 0000007E         ;ª÷∏¥÷–∂œ
  168 0000007E F382 8810       MSR              PRIMASK, r2
  169 00000082         
  170 00000082 F04E 0E04       ORR              lr, lr, #0x04 ;»∑±£“Ï≥£∑µªÿ π”√
                                                            µƒ∂—’ª÷∏’Î «PSP£¨º¥
                                                            LRºƒ¥Ê∆˜µƒŒª2“™Œ™1
  171 00000086 4770            BX               lr          ;“Ï≥£∑µªÿ£¨’‚∏ˆ ±∫Ú
                                                            »ŒŒÒ∂—’ª÷–µƒ £œ¬µƒƒ
                                                            ⁄»›Ω´ª·◊‘∂Øº”‘ÿµΩxP
                                                            SR,PC(»ŒŒÒ»Îø⁄µÿ÷∑)
                                                            ,R14,R12,R3,R2,R1,R
                                                            0(»ŒŒÒµƒ–Œ≤Œ)
  172 00000088         
  173 00000088         ; PendSV_Handler ◊”≥Ã–ÚΩ· ¯
  174 00000088                 ENDP



ARM Macro Assembler    Page 6 


  175 00000088         
  176 00000088                 ALIGN            4
  177 00000088         
  178 00000088                 END
              00000000 
              00000000 
              E000ED20 
              E000ED04 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\objects\context_rvds.d -o.\objects\context_rvds.o -I.\RTE\_Targe
t_1 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.4.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\P
ACK\ARM\CMSIS\5.4.0\Device\ARM\ARMCM3\Include --predefine="__UVISION_VERSION SE
TA 526" --predefine="_RTE_ SETA 1" --predefine="ARMCM3 SETA 1" --list=.\listing
s\context_rvds.lst ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 25 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
   Uses
      None
Comment: .text unused
PendSV_Handler 0000004C

Symbol: PendSV_Handler
   Definitions
      At line 124 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
   Uses
      At line 125 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
Comment: PendSV_Handler used once
_reswitch 0000003E

Symbol: _reswitch
   Definitions
      At line 100 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
   Uses
      At line 88 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
Comment: _reswitch used once
pendsv_exit 0000007E

Symbol: pendsv_exit
   Definitions
      At line 166 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
   Uses
      At line 134 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
Comment: pendsv_exit used once
rt_hw_context_switch 00000028

Symbol: rt_hw_context_switch
   Definitions
      At line 81 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
   Uses
      At line 82 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
Comment: rt_hw_context_switch used once
rt_hw_context_switch_to 00000000

Symbol: rt_hw_context_switch_to
   Definitions
      At line 38 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
   Uses
      At line 41 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
Comment: rt_hw_context_switch_to used once
switch_to_thread 00000070

Symbol: switch_to_thread
   Definitions
      At line 157 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
   Uses
      At line 143 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
Comment: switch_to_thread used once
7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

NVIC_INT_CTRL E000ED04

Symbol: NVIC_INT_CTRL
   Definitions
      At line 16 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
   Uses
      At line 60 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
      At line 106 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s

NVIC_PENDSVSET 10000000

Symbol: NVIC_PENDSVSET
   Definitions
      At line 19 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
   Uses
      At line 61 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
      At line 107 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s

NVIC_PENDSV_PRI 00FF0000

Symbol: NVIC_PENDSV_PRI
   Definitions
      At line 18 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
   Uses
      At line 54 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
Comment: NVIC_PENDSV_PRI used once
NVIC_SYSPRI2 E000ED20

Symbol: NVIC_SYSPRI2
   Definitions
      At line 17 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
   Uses
      At line 53 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
Comment: NVIC_SYSPRI2 used once
SCB_VTOR E000ED08

Symbol: SCB_VTOR
   Definitions
      At line 15 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
   Uses
      None
Comment: SCB_VTOR unused
5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

rt_interrupt_from_thread 00000000

Symbol: rt_interrupt_from_thread
   Definitions
      At line 5 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
   Uses
      At line 48 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
      At line 93 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
      At line 97 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
      At line 141 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s

rt_interrupt_to_thread 00000000

Symbol: rt_interrupt_to_thread
   Definitions
      At line 6 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
   Uses
      At line 44 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
      At line 102 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
      At line 158 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s

rt_thread_switch_interrupt_flag 00000000

Symbol: rt_thread_switch_interrupt_flag
   Definitions
      At line 4 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
   Uses
      At line 85 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s
      At line 132 in file ..\rtthread\3.0.3\libcpu\arm\cortex-m3\context_rvds.s

3 symbols
350 symbols in table
